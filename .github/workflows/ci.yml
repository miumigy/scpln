name: CI

on:
  push:
    branches:
      - '**'
  pull_request:
    branches:
      - '**'

jobs:
  test:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      actions: write
      pull-requests: write
      issues: write
      checks: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'

      - name: Cache pip
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Install test reporter (xml)
        run: |
          pip install unittest-xml-reporting

      - name: Run tests and produce JUnit XML
        run: |
          python scripts/run_tests_xml.py

      - name: Publish Unit Test Results
        if: always()
        uses: EnricoMi/publish-unit-test-result-action@v2
        with:
          files: |
            test-results/**/*.xml
          comment_mode: always
          check_name: Unit Test Results

      - name: Comment PR with result
        if: ${{ github.event_name == 'pull_request' }}
        uses: actions/github-script@v7
        with:
          script: |
            const conclusion = "${{ job.status }}";
            const number = context.payload.pull_request.number;
            const summary = conclusion === 'success' ? '✅ CI passed' : `❌ CI ${conclusion}`;
            await github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: number,
              body: `${summary} (workflow: CI)`
            });
