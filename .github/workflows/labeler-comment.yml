name: Labeler via Comment

on:
  issue_comment:
    types: [created]

permissions:
  contents: read
  pull-requests: write
  issues: write

jobs:
  label:
    if: ${{ github.event.issue.pull_request && startsWith(github.event.comment.body, '/label') }}
    runs-on: ubuntu-latest
    steps:
      - name: Apply labels from comment
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.BOT_TOKEN || github.token }}
          script: |
            const owner = context.repo.owner;
            const repo = context.repo.repo;
            const number = context.payload.issue.number;
            const body = context.payload.comment.body.trim();
            const parts = body.split(/\s+/).slice(1); // drop '/label'
            if (!parts.length) {
              core.setFailed('No labels specified');
              return;
            }
            // ensure labels exist; create if missing
            for (const lbl of parts) {
              try {
                await github.rest.issues.getLabel({ owner, repo, name: lbl });
              } catch (e) {
                try {
                  await github.rest.issues.createLabel({ owner, repo, name: lbl, color: '0E8A16' });
                } catch (e2) {
                  core.warning(`Could not create label '${lbl}': ${e2.message}`);
                }
              }
            }
            await github.rest.issues.addLabels({ owner, repo, issue_number: number, labels: parts });
            await github.rest.issues.createComment({ owner, repo, issue_number: number, body: `üè∑Ô∏è Added labels: ${parts.join(', ')}` });

