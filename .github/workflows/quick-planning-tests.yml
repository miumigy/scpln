name: quick-planning-tests

on:
  pull_request:
    paths:
      - 'samples/planning/**'
      - 'scripts/**'
      - 'engine/**'
      - 'app/**'
      - 'domain/**'
      - 'tests/**'
      - '.github/workflows/quick-planning-tests.yml'
  push:
    branches: [ main ]
    paths:
      - 'samples/planning/**'
      - 'scripts/**'
      - 'engine/**'
      - 'app/**'
      - 'domain/**'
      - 'tests/**'
      - '.github/workflows/quick-planning-tests.yml'

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: '3.12'
          cache: 'pip'
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
      - name: Smoke pipeline and verify artifacts
        run: |
          bash scripts/run_planning_pipeline.sh -I samples/planning -o out --weeks 4
          python - << 'PY'
import json,sys
ok=True
def must_keys(path,keys):
  global ok
  try:
    with open(path,'r',encoding='utf-8') as f:
      data=json.load(f)
    for k in keys:
      if k not in data:
        print(f"[error] missing key {k} in {path}")
        ok=False
  except Exception as e:
    print(f"[error] cannot read {path}: {e}")
    ok=False
must_keys('out/aggregate.json',['rows','schema_version'])
must_keys('out/sku_week.json',['rows','schema_version'])
must_keys('out/mrp.json',['rows','schema_version'])
must_keys('out/plan_final.json',['weekly_summary','boundary_summary'])
if not ok:
  sys.exit(1)
print('[ok] artifact structure verified')
PY
      - name: Run quick tests
        env:
          PYTHONPATH: ${{ github.workspace }}
        run: |
          pytest -q tests/test_planning_pipeline.py::test_aggregate_supply_backlog
          pytest -q tests/test_ui_*.py
          pytest -q tests/test_simulation_endpoint.py
      - name: Upload pipeline outputs (on failure)
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: pipeline-out
          path: out
